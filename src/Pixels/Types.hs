--
-- Pixels.Types
-- Types...
--
-- Jonatan H Sundqvist
-- August 20 2016
--

-- TODO | -
--        -

-- SPEC | -
--        -



------------------------------------------------------------------------------------------------------------------------------------------------------
-- API
------------------------------------------------------------------------------------------------------------------------------------------------------
module Pixels.Types where



------------------------------------------------------------------------------------------------------------------------------------------------------
-- We'll need these
------------------------------------------------------------------------------------------------------------------------------------------------------
import qualified Data.Set                                   as S
import           Graphics.Rendering.OpenGL.GL.BufferObjects as GL
import qualified Graphics.UI.GLFW                           as GLFW

import           Cartesian.Plane.Types



------------------------------------------------------------------------------------------------------------------------------------------------------
-- Types
------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------

type Mesh  = (GL.BufferObject, GL.BufferObject, Int)
type World = ()

------------------------------------------------------------------------------------------------------------------------------------------------------

-- |
data AppState = AppState { _input :: Input Double, _world :: World, _settings :: Settings }


-- |
data Input f = Input { _mouse :: Mouse f, _keyboard :: S.Set GLFW.Key }


-- |
data Mouse f = Mouse { _position :: Vector2D f, _buttons :: S.Set GLFW.MouseButton }


-- |
data Settings = Settings {}


-- |
-- data Camera f = Camera {}